let prevMessage = null;
let tempNumber = 1;

const objPhrase = {
  1: "Пить можно до работы, во время работы, после работы, но не вместо работы",
  2: "Как-то раз в лесу заблудились два вегана. Один перестал быть веганом, а второму Царствие небесное",
  3: "Всего лишь 26 литров пива достаточно взрослому человеку для покрытия дневной потребности в кальции",
  4: "Хороший собеседник не только внимательно слушает, но и вовремя наливает",
  5: "Похмелья не допущу — трезветь не буду!",
  6: "Водка «Аватар» — научись управлять синим телом",
  7: "Алкоголь не помогает найти ответ, он помогает забыть вопрос",
  8: "Алкоголь убивает нервные клетки. Остаются только спокойные",
  9: "В Спарте ленивых и склонных к алкоголизму детей сбрасывали в Россию",
  10: "После бутылки коньяка беседа превращается в утечку информации",
  11: "Как было бы хорошо иметь каменное сердце, резиновую нервную систему и вискарь вместо крови",
  12: "Если идти на запах алкоголя, рано или поздно можно встретить меня",
  13: "Нормальная дамская сумочка должна вмещать хотя бы две полторашк",
  14: "Только наш человек может пропить деньги с тем, у кого он их занял",
  15: "Уронили виски на пол — оторвали Кате руки…",
  16: `- Какая милая девочка! Сколько тебе?
  - Грамм`,
  17: `- Возраст - это всего лишь цифра. Она не определяет ум человека и его взгляды на жизнь. Всё зависит не от прожитых лет, а от пережитых обстоятельств в жизни.
  - Молодой человек, либо паспорт показывайте, либо ставьте бутылку на мест`,
  18: "Быстрее всего радужные перспективы открываются при помощи штопора",
  19: "С каждым человеком в жизни случится история по пьяни, по которой можно будет писать книгу",
  20: "Если ты не можешь на своем рабочем месте пить пиво в трусах, значит, где-то в жизни ты повернул не туда",
  21: "Ушёл из большого спорта в длительный запой, но и там продолжал по привычке бить рекорды",
  22: "Не алкоголик, а бесстрашный путешественник по эмоциональному спектру посредством химических порталов в стеклянных сосуда",
};

// async function printPhrase(ctx) {
//   try {
//     await ctx
//       .deleteMessage()
//       .then(() => (tempNumber = Math.floor(Math.random() * 22) + 1));

//     if (prevMessage) {
//       await ctx.deleteMessage(prevMessage);
//     }
//     await ctx
//       .reply(objPhrase[tempNumber])
//       .then((message) => (prevMessage = message.message_id));
//   } catch (e) {
//     console.error(e);
//   }
// }

async function printPhrase(ctx) {
  try {
    await ctx
      .deleteMessage()
      .then(() => (tempNumber = Math.floor(Math.random() * 22) + 1));

    await ctx.reply(objPhrase[tempNumber]);
  } catch (e) {
    console.error(e);
  }
}

module.exports.printPhrase = printPhrase;
